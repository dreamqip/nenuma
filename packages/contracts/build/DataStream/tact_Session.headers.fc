;;
;; Header files for Session
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_slice_eq_bits_nullable_one
int __tact_slice_eq_bits_nullable_one(slice a, slice b) inline;

;; $DSTSubscribe$_store
builder $DSTSubscribe$_store(builder build_0, (int, slice, int) v) inline;

;; $DSTSubscribe$_store_cell
cell $DSTSubscribe$_store_cell((int, slice, int) v) inline;

;; $DSTSubscribeSuccess$_load
(slice, ((int, slice, int))) $DSTSubscribeSuccess$_load(slice sc_0) inline;

;; $Candlestick$_store
builder $Candlestick$_store(builder build_0, (int, int, int, int, int, int) v) inline_ref;

;; $Candlestick$_load
(slice, ((int, int, int, int, int, int))) $Candlestick$_load(slice sc_0) inline_ref;

;; $DSTUnsubscribedNotification$_load
(slice, ((int, int))) $DSTUnsubscribedNotification$_load(slice sc_0) inline;

;; $SBCandlestickPublishedNotification$_load
(slice, ((int, (int, int, int, int, int, int), int))) $SBCandlestickPublishedNotification$_load(slice sc_0) inline;

;; $SESDeploy$_load
(slice, ((int))) $SESDeploy$_load(slice sc_0) inline;

;; $SESDeploySuccess$_store
builder $SESDeploySuccess$_store(builder build_0, (int, slice) v) inline;

;; $SESDeploySuccess$_store_cell
cell $SESDeploySuccess$_store_cell((int, slice) v) inline;

;; $SESSubscribe$_load
(slice, ((int, int))) $SESSubscribe$_load(slice sc_0) inline;

;; $DSTTopUpSubscription$_store
builder $DSTTopUpSubscription$_store(builder build_0, (int, slice, slice, int) v) inline;

;; $DSTTopUpSubscription$_store_cell
cell $DSTTopUpSubscription$_store_cell((int, slice, slice, int) v) inline;

;; $SESSubscribeSuccess$_store
builder $SESSubscribeSuccess$_store(builder build_0, (int, int) v) inline;

;; $SESSubscribeSuccess$_store_cell
cell $SESSubscribeSuccess$_store_cell((int, int) v) inline;

;; $SESCandlestickPublishedNotification$_store
builder $SESCandlestickPublishedNotification$_store(builder build_0, (int, (int, int, int, int, int, int), int) v) inline;

;; $SESCandlestickPublishedNotification$_store_cell
cell $SESCandlestickPublishedNotification$_store_cell((int, (int, int, int, int, int, int), int) v) inline;

;; $SESUnsubscribedNotification$_store
builder $SESUnsubscribedNotification$_store(builder build_0, (int, int) v) inline;

;; $SESUnsubscribedNotification$_store_cell
cell $SESUnsubscribedNotification$_store_cell((int, int) v) inline;

;; $SESUnsubscribe$_load
(slice, ((int))) $SESUnsubscribe$_load(slice sc_0) inline;

;; $SBUnsubscribe$_store
builder $SBUnsubscribe$_store(builder build_0, (int) v) inline;

;; $SBUnsubscribe$_store_cell
cell $SBUnsubscribe$_store_cell((int) v) inline;

;; $SESDestroy$_load
(slice, ((int))) $SESDestroy$_load(slice sc_0) inline;

;; $SESDestroySuccess$_store
builder $SESDestroySuccess$_store(builder build_0, (int) v) inline;

;; $SESDestroySuccess$_store_cell
cell $SESDestroySuccess$_store_cell((int) v) inline;

;; $Session$_store
builder $Session$_store(builder build_0, (slice, slice, slice) v) inline;

;; $Session$_load
(slice, ((slice, slice, slice))) $Session$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Session$init$_load
(slice, ((slice, slice))) $Session$init$_load(slice sc_0) inline;

;; $Session$_contract_init
(slice, slice, slice) $Session$_contract_init(slice $stream, slice $subscriber) impure inline_ref;

;; $Session$_contract_load
(slice, slice, slice) $Session$_contract_load() impure inline_ref;

;; $Session$_contract_store
() $Session$_contract_store((slice, slice, slice) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $Session$_fun_balance
((slice, slice, slice), int) $Session$_fun_balance((slice, slice, slice) $self) impure inline_ref;

;; $Session$_fun_storageReserve
((slice, slice, slice), int) $Session$_fun_storageReserve((slice, slice, slice) $self) impure inline_ref;

;; $Session$_fun_subscribeDeposit
((slice, slice, slice), int) $Session$_fun_subscribeDeposit((slice, slice, slice) $self) impure inline_ref;

;; $Session$_fun_unsubscribeDeposit
((slice, slice, slice), int) $Session$_fun_unsubscribeDeposit((slice, slice, slice) $self) impure inline_ref;

;; $Session$_fun_destroyDeposit
((slice, slice, slice), int) $Session$_fun_destroyDeposit((slice, slice, slice) $self) impure inline_ref;

;; $Session$_fun_streamAddress
((slice, slice, slice), slice) $Session$_fun_streamAddress((slice, slice, slice) $self) impure inline_ref;

;; $Session$_fun_subscriberAddress
((slice, slice, slice), slice) $Session$_fun_subscriberAddress((slice, slice, slice) $self) impure inline_ref;

;; $Session$_fun_batchAddress
((slice, slice, slice), slice) $Session$_fun_batchAddress((slice, slice, slice) $self) impure inline_ref;

;; $Session$_fun_forward
((slice, slice, slice), ()) $Session$_fun_forward((slice, slice, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Session$_fun_notify
((slice, slice, slice), ()) $Session$_fun_notify((slice, slice, slice) $self, cell $body) impure inline;

;; $SESDeploySuccess$_constructor_queryId_subscriber
((int, slice)) $SESDeploySuccess$_constructor_queryId_subscriber(int queryId, slice subscriber) inline;

;; $DSTSubscribe$_constructor_queryId_subscriber_notificationsCount
((int, slice, int)) $DSTSubscribe$_constructor_queryId_subscriber_notificationsCount(int queryId, slice subscriber, int notificationsCount) inline;

;; $DSTTopUpSubscription$_constructor_queryId_subscriber_batch_notificationsCount
((int, slice, slice, int)) $DSTTopUpSubscription$_constructor_queryId_subscriber_batch_notificationsCount(int queryId, slice subscriber, slice batch, int notificationsCount) inline;

;; $SESSubscribeSuccess$_constructor_queryId_remainingNotificationsCount
((int, int)) $SESSubscribeSuccess$_constructor_queryId_remainingNotificationsCount(int queryId, int remainingNotificationsCount) inline;

;; $SESCandlestickPublishedNotification$_constructor_queryId_candlestick_remainingNotificationsCount
((int, (int, int, int, int, int, int), int)) $SESCandlestickPublishedNotification$_constructor_queryId_candlestick_remainingNotificationsCount(int queryId, (int, int, int, int, int, int) candlestick, int remainingNotificationsCount) inline;

;; $SESUnsubscribedNotification$_constructor_queryId_remainingNotificationsCount
((int, int)) $SESUnsubscribedNotification$_constructor_queryId_remainingNotificationsCount(int queryId, int remainingNotificationsCount) inline;

;; $SBUnsubscribe$_constructor_queryId
((int)) $SBUnsubscribe$_constructor_queryId(int queryId) inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $SESDestroySuccess$_constructor_queryId
((int)) $SESDestroySuccess$_constructor_queryId(int queryId) inline;
