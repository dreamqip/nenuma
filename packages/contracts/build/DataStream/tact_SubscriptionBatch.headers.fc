;;
;; Header files for SubscriptionBatch
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_slice_cell
(cell, ()) __tact_dict_set_slice_cell(cell d, int kl, slice k, cell v) inline;

;; __tact_dict_get_slice_cell
cell __tact_dict_get_slice_cell(cell d, int kl, slice k) inline;

;; __tact_dict_min_slice_cell
(slice, cell, int) __tact_dict_min_slice_cell(cell d, int kl) inline;

;; __tact_dict_next_slice_cell
(slice, cell, int) __tact_dict_next_slice_cell(cell d, int kl, slice pivot) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Candlestick$_store
builder $Candlestick$_store(builder build_0, (int, int, int, int, int, int) v) inline_ref;

;; $Candlestick$_load
(slice, ((int, int, int, int, int, int))) $Candlestick$_load(slice sc_0) inline_ref;

;; $SBDeploy$_load
(slice, ((int))) $SBDeploy$_load(slice sc_0) inline;

;; $SBDeploySuccess$_store
builder $SBDeploySuccess$_store(builder build_0, (int, int) v) inline;

;; $SBDeploySuccess$_store_cell
cell $SBDeploySuccess$_store_cell((int, int) v) inline;

;; $SBSubscribe$_load
(slice, ((int, slice, int))) $SBSubscribe$_load(slice sc_0) inline;

;; $SBSubscribeSuccess$_store
builder $SBSubscribeSuccess$_store(builder build_0, (int, slice, int) v) inline;

;; $SBSubscribeSuccess$_store_cell
cell $SBSubscribeSuccess$_store_cell((int, slice, int) v) inline;

;; $SBPublishCandlestick$_load
(slice, ((int, (int, int, int, int, int, int), slice))) $SBPublishCandlestick$_load(slice sc_0) inline;

;; $SBCandlestickPublishedNotification$_store
builder $SBCandlestickPublishedNotification$_store(builder build_0, (int, (int, int, int, int, int, int), int) v) inline;

;; $SBCandlestickPublishedNotification$_store_cell
cell $SBCandlestickPublishedNotification$_store_cell((int, (int, int, int, int, int, int), int) v) inline;

;; $SBUnsubscribedNotification$_store
builder $SBUnsubscribedNotification$_store(builder build_0, (int, slice, int) v) inline;

;; $SBUnsubscribedNotification$_store_cell
cell $SBUnsubscribedNotification$_store_cell((int, slice, int) v) inline;

;; $SBPublishCandlestickSuccess$_store
builder $SBPublishCandlestickSuccess$_store(builder build_0, (int) v) inline;

;; $SBPublishCandlestickSuccess$_store_cell
cell $SBPublishCandlestickSuccess$_store_cell((int) v) inline;

;; $SBTopUpSubscription$_load
(slice, ((int, slice, int))) $SBTopUpSubscription$_load(slice sc_0) inline;

;; $SBUnsubscribe$_load
(slice, ((int))) $SBUnsubscribe$_load(slice sc_0) inline;

;; $SubscriptionInfo$_store
builder $SubscriptionInfo$_store(builder build_0, (int) v) inline;

;; $SubscriptionInfo$_store_cell
cell $SubscriptionInfo$_store_cell((int) v) inline;

;; $SubscriptionInfo$_not_null
((int)) $SubscriptionInfo$_not_null(tuple v) inline;

;; $SubscriptionInfo$_store_opt
cell $SubscriptionInfo$_store_opt(tuple v) inline;

;; $SubscriptionInfo$_load
(slice, ((int))) $SubscriptionInfo$_load(slice sc_0) inline;

;; $SubscriptionInfo$_as_optional
tuple $SubscriptionInfo$_as_optional((int) v) inline;

;; $SubscriptionInfo$_load_opt
tuple $SubscriptionInfo$_load_opt(cell cl) inline;

;; $SubscriptionBatch$_store
builder $SubscriptionBatch$_store(builder build_0, (slice, int, cell, int) v) inline;

;; $SubscriptionBatch$_load
(slice, ((slice, int, cell, int))) $SubscriptionBatch$_load(slice sc_0) inline;

;; $SubscriptionInfo$_get_remainingNotificationsCount
_ $SubscriptionInfo$_get_remainingNotificationsCount((int) v) inline;

;; $SubscriptionBatch$init$_load
(slice, ((slice, int))) $SubscriptionBatch$init$_load(slice sc_0) inline;

;; $SubscriptionBatch$_contract_init
(slice, int, cell, int) $SubscriptionBatch$_contract_init(slice $stream, int $batchId) impure inline_ref;

;; $SubscriptionBatch$_contract_load
(slice, int, cell, int) $SubscriptionBatch$_contract_load() impure inline_ref;

;; $SubscriptionBatch$_contract_store
() $SubscriptionBatch$_contract_store((slice, int, cell, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SubscriptionBatch$_fun_balance
((slice, int, cell, int), int) $SubscriptionBatch$_fun_balance((slice, int, cell, int) $self) impure inline_ref;

;; $SubscriptionBatch$_fun_storageReserve
((slice, int, cell, int), int) $SubscriptionBatch$_fun_storageReserve((slice, int, cell, int) $self) impure inline_ref;

;; $SubscriptionBatch$_fun_streamAddress
((slice, int, cell, int), slice) $SubscriptionBatch$_fun_streamAddress((slice, int, cell, int) $self) impure inline_ref;

;; $SubscriptionBatch$_fun_batchId
((slice, int, cell, int), int) $SubscriptionBatch$_fun_batchId((slice, int, cell, int) $self) impure inline_ref;

;; $SubscriptionBatch$_fun_subscriptions
((slice, int, cell, int), cell) $SubscriptionBatch$_fun_subscriptions((slice, int, cell, int) $self) impure inline_ref;

;; $SubscriptionBatch$_fun_subscriptionsCount
((slice, int, cell, int), int) $SubscriptionBatch$_fun_subscriptionsCount((slice, int, cell, int) $self) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $SBDeploySuccess$_constructor_queryId_batchId
((int, int)) $SBDeploySuccess$_constructor_queryId_batchId(int queryId, int batchId) inline;

;; $SubscriptionInfo$_constructor_remainingNotificationsCount
((int)) $SubscriptionInfo$_constructor_remainingNotificationsCount(int remainingNotificationsCount) inline;

;; $SBSubscribeSuccess$_constructor_queryId_session_remainingNotificationsCount
((int, slice, int)) $SBSubscribeSuccess$_constructor_queryId_session_remainingNotificationsCount(int queryId, slice session, int remainingNotificationsCount) inline;

;; $SBCandlestickPublishedNotification$_constructor_queryId_candlestick_remainingNotificationsCount
((int, (int, int, int, int, int, int), int)) $SBCandlestickPublishedNotification$_constructor_queryId_candlestick_remainingNotificationsCount(int queryId, (int, int, int, int, int, int) candlestick, int remainingNotificationsCount) inline;

;; $SBUnsubscribedNotification$_constructor_queryId_session_remainingNotificationsCount
((int, slice, int)) $SBUnsubscribedNotification$_constructor_queryId_session_remainingNotificationsCount(int queryId, slice session, int remainingNotificationsCount) inline;

;; $SBPublishCandlestickSuccess$_constructor_queryId
((int)) $SBPublishCandlestickSuccess$_constructor_queryId(int queryId) inline;
