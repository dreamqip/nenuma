;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

;;
;; Type: BRADeploy
;; Header: 0x466d2081
;; TLB: bra_deploy#466d2081 queryId:uint64 = BRADeploy
;;

(slice, ((int))) $BRADeploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1181556865);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: BRADeploySuccess
;; Header: 0xd1adde56
;; TLB: bra_deploy_success#d1adde56 queryId:uint64 trader:address = BRADeploySuccess
;;

builder $BRADeploySuccess$_store(builder build_0, (int, slice) v) inline {
    var (v'queryId, v'trader) = v;
    build_0 = store_uint(build_0, 3517832790, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    build_0 = __tact_store_address(build_0, v'trader);
    return build_0;
}

cell $BRADeploySuccess$_store_cell((int, slice) v) inline {
    return $BRADeploySuccess$_store(begin_cell(), v).end_cell();
}

((int, slice)) $BRADeploySuccess$_constructor_queryId_trader(int queryId, slice trader) inline {
    return (queryId, trader);
}

;;
;; Type: BrokerageAccount
;;

builder $BrokerageAccount$_store(builder build_0, (slice, slice) v) inline {
    var (v'brokerage, v'trader) = v;
    build_0 = __tact_store_address(build_0, v'brokerage);
    build_0 = __tact_store_address(build_0, v'trader);
    return build_0;
}

(slice, ((slice, slice))) $BrokerageAccount$_load(slice sc_0) inline {
    var v'brokerage = sc_0~__tact_load_address();
    var v'trader = sc_0~__tact_load_address();
    return (sc_0, (v'brokerage, v'trader));
}

(slice, ((slice, slice))) $BrokerageAccount$init$_load(slice sc_0) inline {
    var v'brokerage = sc_0~__tact_load_address();
    var v'trader = sc_0~__tact_load_address();
    return (sc_0, (v'brokerage, v'trader));
}

(slice, slice) $BrokerageAccount$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$BrokerageAccount$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (slice brokerage, slice trader) = $sc~$BrokerageAccount$init$_load();
        $sc.end_parse();
        return $BrokerageAccount$_contract_init(brokerage, trader);
    }
}

() $BrokerageAccount$_contract_store((slice, slice) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $BrokerageAccount$_store(b, v);
    set_data(b.end_cell());
}